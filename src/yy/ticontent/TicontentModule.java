/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package yy.ticontent;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;

import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.provider.MediaStore;

@Kroll.module(name = "Ticontent", id = "yy.ticontent")
public class TicontentModule extends KrollModule {

	// Standard Debugging variables
	private static final String TAG = "TicontentModule";

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public TicontentModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(TAG, "inside onAppCreate");
		// put module init code that needs to run when the application is
		// created
	}

	public String resolve(String uri, String column) {
		Uri contentUri = Uri.parse(uri);
		Cursor cursor = null;
		try {
			String[] proj = { column };
			Context context = TiApplication.getInstance()
					.getApplicationContext();
			cursor = context.getContentResolver().query(contentUri, proj, null,
					null, null);
			int column_index = cursor.getColumnIndexOrThrow(column);
			cursor.moveToFirst();
			return cursor.getString(column_index);
		} finally {
			if (cursor != null) {
				cursor.close();
			}
		}
	}

	// Methods
	@Kroll.method
	public String resolveAudioPath(String uri) {
		return resolve(uri, MediaStore.Audio.Media.DATA);
	}

	// Methods
	@Kroll.method
	public String resolveImagePath(String uri) {
		return resolve(uri, MediaStore.Images.Media.DATA);
	}

	// Methods
	@Kroll.method
	public String resolveVideoPath(String uri) {
		return resolve(uri, MediaStore.Video.Media.DATA);
	}
}
